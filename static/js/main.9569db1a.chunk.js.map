{"version":3,"sources":["components/Board.module.css","components/Score.module.css","components/Header.module.css","components/Tile.module.css","game/index.js","hooks/useKeypress.js","components/Score.jsx","components/Header.jsx","components/Tile.jsx","components/Board.jsx","pages/Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","directions","UP","RIGHT","DOWN","LEFT","TILE_VALUES","getRandomIntInclusive","min","max","Math","ceil","floor","random","copyArray","array","JSON","parse","stringify","getTilePosition","row","col","tileSize","margin","x","y","transpose","a","w","length","h","Array","i","j","t","merge","board","dir","map","rowIdx","tile","colIdx","prevPos","updatePrevPosition","score","needTranspose","includes","output","forEach","newRow","prevTile","populated","value","push","padding","fill","addNewTile","updated","freeCells","rowId","colId","getFreePlace","useKeypress","key","action","useEffect","onKeyup","e","window","addEventListener","removeEventListener","Score","className","styles","Header","header","button","Tile","props","useState","position","setPosition","setTimeout","populate","style","left","top","React","memo","Board","children","boardBackground","el","idx","gridCell","Game","width","generateBoard","tiles","setTiles","setScore","handleAddNewTile","prevState","handleMerge","points","prevScore","useKeyPress","size","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9569db1a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__2NBQM\",\"boardBackground\":\"Board_boardBackground__2po14\",\"gridCell\":\"Board_gridCell__pho5B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"score\":\"Score_score__3Ht04\",\"value\":\"Score_value__1wiFa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3mObx\",\"button\":\"Header_button__3Lscu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tile\":\"Tile_tile__2ux10\",\"populate\":\"Tile_populate__29Yra\",\"populate-tile\":\"Tile_populate-tile__3bIKm\"};","export const BOARD_SIZE = 16;\nexport const TILE_SIZE = 180;\nexport const TILE_OFFSET = 15;\nexport const WIDTH = 4;\nexport const HEIGHT = 4;\nexport const directions = {\n  UP: \"UP\",\n  RIGHT: \"RIGHT\",\n  DOWN: \"DOWN\",\n  LEFT: \"LEFT\",\n};\nexport const TILE_VALUES = [2, 4];\n\nfunction getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction copyArray(array) {\n  return JSON.parse(JSON.stringify(array));\n}\n\nexport function getTilePosition(\n  row,\n  col,\n  boardSize = BOARD_SIZE,\n  tileSize = TILE_SIZE,\n  margin = TILE_OFFSET\n) {\n  let x = margin * (col + 1) + col * tileSize,\n    y = margin * (row + 1) + row * tileSize;\n\n  return {\n    x,\n    y,\n  };\n}\n\nfunction transpose(a) {\n  var w = a.length || 0;\n  var h = a[0] instanceof Array ? a[0].length : 0;\n\n  if (h === 0 || w === 0) {\n    return [];\n  }\n\n  var i,\n    j,\n    t = [];\n\n  for (i = 0; i < h; i++) {\n    t[i] = [];\n\n    for (j = 0; j < w; j++) {\n      t[i][j] = a[j][i];\n    }\n  }\n\n  return t;\n}\n\nexport function generateBoard(width = WIDTH, height = HEIGHT) {\n  return new Array(height).fill(new Array(width).fill(null));\n}\n\nexport function updatePrevPosition(board) {\n  return board.map((row, rowIdx) => {\n    return row.map((tile, colIdx) => {\n      if (tile?.prevPos) {\n        tile.prevPos = [rowIdx, colIdx];\n      }\n\n      return tile;\n    });\n  });\n}\n\nexport function merge(board, dir) {\n  board = updatePrevPosition(copyArray(board));\n\n  let score = 0;\n  const needTranspose = () => [directions.UP, directions.DOWN].includes(dir);\n  const needLeftPadding = () =>\n    [directions.DOWN, directions.RIGHT].includes(dir);\n\n  board = needTranspose() ? transpose(board) : board;\n  let output = [],\n    w = board[0].length;\n\n  board.forEach((row) => {\n    let newRow = [];\n    let prevTile = null;\n\n    row.forEach((tile) => {\n      if (tile === null) return;\n\n      tile.populated = false;\n\n      if (prevTile && tile.value === prevTile.value) {\n        newRow[newRow.length - 1] = {\n          ...tile,\n          value: tile.value * 2,\n          prevPos: prevTile.prevPos,\n        };\n        score += tile.value;\n      } else {\n        prevTile = tile;\n        newRow.push(tile);\n      }\n    });\n\n    let padding = new Array(w - newRow.length).fill(null);\n    needLeftPadding()\n      ? output.push([...padding, ...newRow])\n      : output.push([...newRow, ...padding]);\n  });\n\n  output = needTranspose() ? transpose(output) : output;\n  return [score, output];\n}\n\nexport function getFreePlace(board) {\n  let freeCells = [];\n  board.forEach((row, rowId) => {\n    row.forEach((col, colId) => {\n      if (col === null) freeCells.push([rowId, colId]);\n    });\n  });\n\n  let pos = freeCells[getRandomIntInclusive(0, freeCells.length - 1)];\n  return pos;\n}\n\nexport function getRandomTileValue() {\n  return TILE_VALUES[getRandomIntInclusive(0, TILE_VALUES.length - 1)];\n}\n\nexport function addNewTile(board) {\n  let updated = copyArray(board);\n  let [row, col] = getFreePlace(updated);\n  updated[row][col] = {\n    value: getRandomTileValue(),\n    prevPos: [row, col],\n    populated: true,\n  };\n\n  return updated;\n}\n","import { useEffect } from \"react\";\n\nexport default function useKeypress(key, action) {\n  useEffect(() => {\n    function onKeyup(e) {\n      if (e.key === key) action();\n    }\n    window.addEventListener(\"keyup\", onKeyup);\n    return () => window.removeEventListener(\"keyup\", onKeyup);\n  }, []);\n}\n","import styles from \"./Score.module.css\";\n\nexport default function Score({ value }) {\n  return (\n    <div className={styles.score}>\n      <span>Score:</span>\n      <span className={styles.value}>{value}</span>\n    </div>\n  );\n}\n","import Score from \"./Score\";\nimport styles from \"./Header.module.css\";\n\nexport default function Header({ score }) {\n  return (\n    <header className={styles.header}>\n      <Score value={score} />\n      <button className={styles.button}>New game</button>\n    </header>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { getTilePosition } from \"../game\";\n\nimport styles from \"./Tile.module.css\";\n\nfunction Tile(props) {\n  const { row, col, value, populated, prevPos } = props;\n  const [position, setPosition] = useState(getTilePosition(...prevPos));\n\n  useEffect(() => {\n    setPosition(() => {\n      setTimeout(() => setPosition(getTilePosition(row, col)), 10);\n      return getTilePosition(...prevPos);\n    });\n  }, [row, col, prevPos, setPosition]);\n\n  return (\n    <div\n      className={`${styles.tile} ${\n        populated ? styles.populate : \"\"\n      } tile tile-${value}`}\n      style={{\n        left: `${position.x}px`,\n        top: `${position.y}px`,\n      }}\n    >\n      {value}\n    </div>\n  );\n}\n\nexport default React.memo(Tile);\n","import React from \"react\";\nimport { BOARD_SIZE } from \"../game\";\nimport styles from \"./Board.module.css\";\n\nexport default function Board({ children }) {\n  return (\n    <div className={styles.board}>\n      <div className={styles.boardBackground}>\n        {new Array(BOARD_SIZE).fill(0).map((el, idx) => {\n          return <div className={styles.gridCell} key={idx} />;\n        })}\n      </div>\n      {children}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  BOARD_SIZE,\n  generateBoard,\n  addNewTile,\n  merge,\n  directions,\n} from \"../game\";\nimport useKeyPress from \"../hooks/useKeypress\";\nimport Header from \"../components/Header\";\nimport Tile from \"../components/Tile\";\nimport Board from \"../components/Board\";\n\nexport default function Game() {\n  const [tiles, setTiles] = useState(generateBoard());\n  const [score, setScore] = useState(0);\n\n  const handleAddNewTile = () => {\n    setTiles((prevState) => {\n      return addNewTile(prevState);\n    });\n  };\n\n  const handleMerge = (dir) => {\n    setTiles((prevState) => {\n      let [points, tiles] = merge(prevState, dir);\n      setScore((prevScore) => (prevScore += points));\n      return tiles;\n    });\n  };\n\n  useKeyPress(\"ArrowLeft\", () => {\n    handleMerge(directions.LEFT);\n    handleAddNewTile();\n  });\n\n  useKeyPress(\"ArrowRight\", () => {\n    handleMerge(directions.RIGHT);\n    handleAddNewTile();\n  });\n\n  useKeyPress(\"ArrowUp\", () => {\n    handleMerge(directions.UP);\n    handleAddNewTile();\n  });\n\n  useKeyPress(\"ArrowDown\", () => {\n    handleMerge(directions.DOWN);\n    handleAddNewTile();\n  });\n\n  useEffect(() => {\n    setTiles((prevState) => {\n      return addNewTile(prevState);\n    });\n  }, []);\n\n  return (\n    <div>\n      <Header score={score} />\n      <Board size={BOARD_SIZE}>\n        {tiles &&\n          tiles.map((row, rowIdx) => {\n            return row.map((item, colIdx) => {\n              return (\n                item && (\n                  <Tile\n                    row={rowIdx}\n                    col={colIdx}\n                    populated={item.populated}\n                    prevPos={item.prevPos}\n                    value={item.value}\n                    key={rowIdx + colIdx}\n                  />\n                )\n              );\n            });\n          })}\n      </Board>\n    </div>\n  );\n}\n","import Game from \"./pages/Game\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}